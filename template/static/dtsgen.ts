/* tslint:disable:non-literal-fs-path */
import * as fs from 'fs';
import * as path from 'path';
import dtsGenerator, {readSchemasFromFile} from 'dtsgenerator';

(async (): Promise<void> => {
    const swaggerFilePath: string = path.resolve(`${__dirname}/src/swagger.json`);
    const swaggerJSON = await readSchemasFromFile(swaggerFilePath);
    let typingsString: string = '';

    try {
        // Generate typings from from swagger JSON
        typingsString = await dtsGenerator({
            contents: swaggerJSON,
        });
    } catch (e: any) {
        throw new Error(`Error: ${swaggerFilePath} ${e.message}`);
    }

    // Prepend comment to typings string
    typingsString = '/* tslint:disable */\n// Code generated by "dtsgenerator"; DO NOT EDIT\n\n// prettier-ignore\n'.concat(typingsString);

    const typingsFileName: string = `api.d.ts`;
    const typingsFilePath: string = path.resolve(`${__dirname}/dist/${typingsFileName}`);

    // Create typings file
    fs.writeFileSync(typingsFilePath, typingsString);

    console.info('Successfully generated typings files from swagger!');
})();


